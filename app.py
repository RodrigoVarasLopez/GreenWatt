import streamlit as st
import requests
import matplotlib.pyplot as plt

# Cargar token desde secrets (debes definirlo como ESIOS_API_TOKEN en Streamlit Cloud)
api_token = st.secrets["ESIOS_API_TOKEN"]

# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="GreenWatt - Generaci√≥n El√©ctrica en Espa√±a", layout="centered")
st.title("üîå GreenWatt: Generaci√≥n El√©ctrica por Tecnolog√≠a (REE - e-sios)")

# Tecnolog√≠as y sus IDs en la API
tecnologias = {
    'Hidr√°ulica': 12,
    'Nuclear': 6,
    'E√≥lica': 5,
    'Solar fotovoltaica': 4,
    'Carb√≥n': 16,
    'Ciclo combinado': 20,
    'Cogeneraci√≥n': 22
}
sostenibles = ['E√≥lica', 'Solar fotovoltaica', 'Hidr√°ulica']

# Funci√≥n para obtener los datos de la API de e-sios
@st.cache_data
def obtener_datos(api_token):
    headers = {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'x-api-key': api_token  # CORRECTA AUTENTICACI√ìN
    }

    datos = {}
    for nombre, id_tec in tecnologias.items():
        url = f'https://api.esios.ree.es/indicators/{id_tec}'
        try:
            r = requests.get(url, headers=headers)
            if r.status_code == 200:
                valores = r.json()['indicator']['values']
                datos[nombre] = valores[-1]['value'] if valores else 0
            else:
                datos[nombre] = f"Error {r.status_code}"
        except Exception as e:
            datos[nombre] = f"Error: {e}"
    return datos

# Mostrar resultados
datos = obtener_datos(api_token)

st.subheader("‚ö° Producci√≥n actual (MW)")
st.write("Datos en tiempo real desde la API de Red El√©ctrica de Espa√±a (e-sios).")
st.dataframe(datos)

# Visualizaci√≥n gr√°fica
# Solo pintar valores num√©ricos
valores_numericos = {k: v for k, v in datos.items() if isinstance(v, (int, float))}
colores = ['green' if t in sostenibles else 'gray' for t in valores_numericos]

fig, ax = plt.subplots()
ax.bar(valores_numericos.keys(), valores_numericos.values(), color=colores)
ax.set_ylabel("Potencia (MW)")
ax.set_title("Generaci√≥n por Tecnolog√≠a")
plt.xticks(rotation=45)
st.pyplot(fig)

st.info("Las tecnolog√≠as verdes son: E√≥lica, Solar fotovoltaica e Hidr√°ulica.")
